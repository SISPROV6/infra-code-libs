name: Continuous Integration - Revisão de código e testes

on:
  pull_request:
  push:
    # branches de feature/custom
    branches-ignore:
      - main
      - next
      - test

permissions:
  contents: write

jobs:
  code-review:
    name: Build e revisão
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependências
        run: npm ci

      - name: Ler release-info.json
        id: release
        run: |
          PROJECT=$(jq -r '.project' deploy/release-info.json)
          VERSION=$(jq -r '.version' deploy/release-info.json)
          NOTES=$(jq -r '.notes' deploy/release-info.json)
          TAG=$(jq -r '.tag' deploy/release-info.json)
          echo "PROJECT=$PROJECT" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "NOTES=$NOTES" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Build da biblioteca
        run: |
          if [ "${{ env.PROJECT }}" == "ngx-sp-auth" ]; then
            cd projects/ngx-sp-auth
            npm ci

            cd ../../
            npm run build:ngx-sp-auth:prod

          elif [ "${{ env.PROJECT }}" == "ngx-sp-infra" ]; then
            npm run build:ngx-sp-infra:prod
          fi

      - name: Executa testes com cobertura
        run: |
          if [ "${{ env.PROJECT }}" == "ngx-sp-auth" ]; then
            npm run test:ngx-sp-auth:sonar
          elif [ "${{ env.PROJECT }}" == "ngx-sp-infra" ]; then
            npm run test:ngx-sp-infra:sonar
          fi

      - name: Análise com SonarCloud
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}