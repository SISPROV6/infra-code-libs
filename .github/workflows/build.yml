name: Continuous Integration - Revisão de código e testes

on:
  pull_request:
  push:
    # branches de feature/custom
    branches-ignore:
      - main
      - next
      - test

permissions:
  actions: write

jobs:
  code-review:
    name: Build e revisão
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependências
        run: npm ci

      - name: Ler release-info.json
        id: release
        run: |
          PROJECT=$(jq -r '.project' deploy/release-info.json)
          VERSION=$(jq -r '.version' deploy/release-info.json)
          NOTES=$(jq -r '.notes' deploy/release-info.json)
          TAG=$(jq -r '.tag' deploy/release-info.json)
          echo "PROJECT=$PROJECT" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "NOTES=$NOTES" >> $GITHUB_ENV
          echo "NOTES=$TAG" >> $GITHUB_ENV

          echo $PROJECT
          echo $VERSION
          echo $NOTES
          echo $TAG

      - name: Criar Release automático
        uses: actions/create-release@v1
        with:
          tag_name: $TAG
          release_name: Release da ${{ env.PROJECT }} v${{ env.VERSION }}
          body: |
            Mudanças nesta release:
            ${{ env.NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

      # - name: Build da biblioteca
      #   run: npm run build:prod ngx-sp-infra

      # - name: Executa testes com cobertura
      #   run: |
      #     npm run test:sonar

      # - name: Análise com SonarCloud
      #   uses: SonarSource/sonarqube-scan-action@v5
      #   with:
      #     args: >
      #       -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}